# generated by fastapi-codegen:
#   filename:  holy_grail_api.json
#   timestamp: 2023-07-02T14:44:40+00:00

from __future__ import annotations

from enum import Enum
from typing import Any, List, Optional, Union

from pydantic import BaseModel, Field


class User(BaseModel):
    id: Optional[int] = Field(None, description="user's ID")


class Scene(BaseModel):
    number: Optional[int] = Field(None, description='scene number if available')
    name: Optional[str] = Field(None, description='scene name if available')


class Movie(BaseModel):
    name: Optional[str] = None


class Type(Enum):
    dialogue = 'dialogue'
    direction = 'direction'


class Quote(BaseModel):
    id: Optional[int] = None
    movie: Optional[Movie] = None
    scene: Optional[Scene] = None
    type: Optional[Type] = None
    character: Optional[str] = None
    text: Optional[str] = None


class Quotes(BaseModel):
    __root__: List[Quote] = Field(..., description='An array of quotes')


class SceneWithQuotes(BaseModel):
    scene: Optional[Scene] = None
    quotes: Optional[List[Quote]] = None


class Top(BaseModel):
    quote: Optional[Quote] = None


class Tops(BaseModel):
    __root__: List[Top] = Field(..., description='An array of quotes')


class Error(BaseModel):
    code: str
    message: str


class UsersPostRequest(BaseModel):
    username: Optional[str] = None
    password: Optional[str] = None


class UsersIdTopsPostRequest(BaseModel):
    id: Optional[int] = Field(
        None, description='quote id to add to the user top quotes list'
    )


class SceneNumberOrName(BaseModel):
    __root__: Union[Any, Any]
