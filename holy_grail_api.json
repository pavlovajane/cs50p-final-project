{
  "openapi": "3.0.0",
  "info": {
    "title": "MONTY PYTHON BEST QUOTES API",
    "version": "1.0.0",
    "description": "With this API you can get quotes/scenes from 3 Monty Python movies: 'Life of Brian', 'The Meaning of ' and 'Monty Python and The Holy Grail'. \nUser can get a quote or a whole scene. To find a specfic quote the user can use part of this quote, scene name/number and movie name. If the user registers with this API, they can also create their top favourite quotes list"
  },
  "paths": {
    "/users": {
      "post": {
        "summary": "Create a new user",
        "tags": [
          "users"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "5XX": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/users/{id}/tops": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get user's top quotes sorted by quote's text",
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tops"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "5XX": {
            "description": "Unexpected error"
          }
        }
      },
      "post": {
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Add a quote to user's top quotes",
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "qupte_id": {
                    "description": "Quote ID to add to the top list",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tops"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "5XX": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/quotes/quote": {
      "get": {
        "summary": "Get a quote by its' part - a word or a few words",
        "tags": [
          "quotes"
        ],
        "parameters": [
          {
            "in": "query",
            "description": "Text to search a quote for",
            "name": "text",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Quote"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "5XX": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/quotes/random": {
      "get": {
        "summary": "Get a random quote",
        "tags": [
          "quotes"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Quote"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "5XX": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/scenes/scene": {
      "get": {
        "summary": "Get a scene text by its number/name and movie",
        "tags": [
          "scenes"
        ],
        "parameters": [
          {
            "in": "query",
            "description": "Movie name to search scene in (or part of the name)",
            "name": "movie",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scene_number",
            "description": "Scene number may be given",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "scene_name",
            "description": "Name or part of the a scene name may be given",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scene_number_name",
            "description": "Either number or name of the scene should be given",
            "in": "query",
            "schema": {
              "type": "object",
              "oneOf": [
                {
                  "required": [
                    "scene_number"
                  ]
                },
                {
                  "required": [
                    "scene_name"
                  ]
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Scene"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "5XX": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/scenes/random": {
      "get": {
        "summary": "Get a random scene text",
        "tags": [
          "scenes"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Scene"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "5XX": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/movies": {
      "get": {
        "summary": "Get a list of available movies",
        "tags": [
          "movies"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Movie"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "5XX": {
            "description": "Unexpected error"
          }
        }
      }
    }
  },
  "security": [
    {
      "basicAuth": []
    }
  ],
  "components": {
    "securitySchemes": {
      "basicAuth": {
        "type": "http",
        "scheme": "basic"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The user ID"
          },
          "username": {
            "type": "string",
            "description": "The user name"
          },
          "password": {
            "type": "string",
            "description": "Hash for the user password"
          }
        }
      },
      "Scene": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "number": {
            "description": "scene number if available",
            "type": "integer"
          },
          "name": {
            "description": "scene name",
            "type": "string"
          }
        }
      },
      "Movie": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Quote": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "movie": {
            "$ref": "#/components/schemas/Movie"
          },
          "scene": {
            "$ref": "#/components/schemas/Scene"
          },
          "type": {
            "type": "string",
            "enum": [
              "dialogue",
              "direction"
            ]
          },
          "character": {
            "type": "string"
          },
          "quote": {
            "type": "string"
          }
        }
      },
      "Tops": {
        "description": "An array of \"dictionaries\" with top user's quotes",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "movie": {
              "$ref": "#/components/schemas/Movie"
            },
            "scene": {
              "$ref": "#/components/schemas/Scene"
            },
            "type": {
              "type": "string",
              "enum": [
                "dialogue",
                "direction"
              ]
            },
            "character": {
              "type": "string"
            },
            "quote": {
              "type": "string"
            }
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ]
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Bad request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "NotFound": {
        "description": "The specified resource was not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "default": {
        "description": "Unexpected error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    }
  }
}