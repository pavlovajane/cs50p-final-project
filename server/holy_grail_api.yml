openapi: 3.0.0
info:
  title: MONTY PYTHON BEST QUOTES API
  version: 1.0.0
  description: >-
    With this API you can get quotes/scenes from 3 Monty Python movies: 'Life of
    Brian', 'The Meaning of ' and 'Monty Python and The Holy Grail'. 
    
    User can get a quote or a whole scene. To find a specfic quote the user can use part of this quote, scene name/number and movie name.
    If the user registers with this API, they can also create their top favourite quotes list.
paths:
  /users:
    post:
      summary: Create a new user
      tags:
        - users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/BadRequest'
        '5XX':
          description: Unexpected error
  /users/{id}/tops:
    get:
      security:
        - basicAuth: []
      summary: Get user's top quotes 
      tags:
        - users
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tops'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '5XX':
          description: Unexpected error
    post:
      security:
        - basicAuth: []
      summary: Add a quote to user's top quotes
      tags:
        - users
      parameters:
        - name: id
          in: path
          description: User id 
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  description: quote id to add to the user top quotes list
                  type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tops'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '5XX':
          description: Unexpected error
    
  /quotes/search:
    get:
      summary: Get a quote or quotes by quote's part
      tags:
        - quotes
      parameters:
        - in: query
          name: text
          description: Text to search quote(s) for
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quotes'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '5XX':
          description: Unexpected error
  /quotes/random:
    get:
      summary: Get a random quote
      tags:
        - quotes
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quote'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '5XX':
          description: Unexpected error
  /scenes/search:
    get:
      summary: Search for a whole scene (all quotes) by scene's number/name and movie
      tags:
        - scenes
      parameters:
        - in: query
          description: Movie name to search a scene in (or part of the name)
          name: movie
          required: true
          schema:
            type: string
        - name: scene_number
          description: Scene number may be given
          in: query
          schema:
            type: integer
        - name: scene_name
          description: Name or part of the a scene name may be given
          in: query
          schema:
            type: string
        - name: scene_number_or_name
          description: Either number or name of the scene should be given
          in: query
          schema:
            type: object
            oneOf:
              - required:
                  - scene_number
              - required:
                  - scene_name
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SceneWithQuotes'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '5XX':
          description: Unexpected error
  /scenes/random:
    get:
      summary: Get a random scene 
      description: Return all quotes from a random scene, sorted
      tags:
        - scenes
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SceneWithQuotes'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '5XX':
          description: Unexpected error
  /movies:
    get:
      summary: Get a list of available to get quotes movies
      tags:
        - movies
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '5XX':
          description: Unexpected error
      
components:
  securitySchemes:
      basicAuth:     
        type: http
        scheme: basic
        x-basicInfoFunc: swagger_server.controllers.authorization_controller.check_basicAuth
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          description: user's ID
    Scene:
      type: object
      properties:
        number:
          description: scene number if available
          type: integer
        name:
          description: scene name if available
          type: string
    Movie:
      type: object
      properties:
        name:
          type: string
    Quote:
      type: object
      properties:
          id:
            type: integer
          movie:
            $ref: '#/components/schemas/Movie'
          scene:
            $ref: '#/components/schemas/Scene'
          type:
            type: string
            enum: [dialogue, direction]
          character:
            type: string
          text:
            type: string
    Quotes:
      description: An array of quotes
      type: array
      items:
        $ref: '#/components/schemas/Quote'
    SceneWithQuotes:
      description: Scene with all its quotes
      type: object
      properties:
        scene:
          $ref: '#/components/schemas/Scene'
        quotes:
          type: array
          items:
            $ref: '#/components/schemas/Quote'
    Tops:
      description: An array of quotes
      type: array
      items:
        type: object
        properties:
          quote:
            $ref: '#/components/schemas/Quote'
    Error:
      description: A standard error schema
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    default:
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
