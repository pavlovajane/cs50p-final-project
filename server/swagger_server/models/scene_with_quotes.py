# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.quote import Quote  # noqa: F401,E501
from swagger_server.models.scene import Scene  # noqa: F401,E501
from swagger_server import util


class SceneWithQuotes(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, scene: Scene=None, quotes: List[Quote]=None):  # noqa: E501
        """SceneWithQuotes - a model defined in Swagger

        :param scene: The scene of this SceneWithQuotes.  # noqa: E501
        :type scene: Scene
        :param quotes: The quotes of this SceneWithQuotes.  # noqa: E501
        :type quotes: List[Quote]
        """
        self.swagger_types = {
            'scene': Scene,
            'quotes': List[Quote]
        }

        self.attribute_map = {
            'scene': 'scene',
            'quotes': 'quotes'
        }
        self._scene = scene
        self._quotes = quotes

    @classmethod
    def from_dict(cls, dikt) -> 'SceneWithQuotes':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SceneWithQuotes of this SceneWithQuotes.  # noqa: E501
        :rtype: SceneWithQuotes
        """
        return util.deserialize_model(dikt, cls)

    @property
    def scene(self) -> Scene:
        """Gets the scene of this SceneWithQuotes.


        :return: The scene of this SceneWithQuotes.
        :rtype: Scene
        """
        return self._scene

    @scene.setter
    def scene(self, scene: Scene):
        """Sets the scene of this SceneWithQuotes.


        :param scene: The scene of this SceneWithQuotes.
        :type scene: Scene
        """

        self._scene = scene

    @property
    def quotes(self) -> List[Quote]:
        """Gets the quotes of this SceneWithQuotes.


        :return: The quotes of this SceneWithQuotes.
        :rtype: List[Quote]
        """
        return self._quotes

    @quotes.setter
    def quotes(self, quotes: List[Quote]):
        """Sets the quotes of this SceneWithQuotes.


        :param quotes: The quotes of this SceneWithQuotes.
        :type quotes: List[Quote]
        """

        self._quotes = quotes
